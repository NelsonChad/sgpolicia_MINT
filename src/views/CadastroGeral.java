/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views;

import control.Controlos;
import dao.conectaBanco;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author DETEC_IT
 */
public final class CadastroGeral extends javax.swing.JDialog implements Controlos {

    private String endereco, situacao, tipoOcorrenc, Ocorrencia, Danos;
    private int codOc, codDanos;

    public String getSituacao() {
        return situacao;
    }

    public void setSituacao(String situacao) {
        this.situacao = situacao;
    }

    public String getTipoOcorrenc() {
        return tipoOcorrenc;
    }

    public void setTipoOcorrenc(String tipoOcorrenc) {
        this.tipoOcorrenc = tipoOcorrenc;
    }

    public int getSit() {
        return sit;
    }

    public void setSit(int sit) {
        this.sit = sit;
    }

    public int getTipOc() {
        return tipOc;
    }

    public void setTipOc(int tipOc) {
        this.tipOc = tipOc;
    }
    private int end, sit, tipOc;

    public String getEndereco() {
        return endereco;
    }

    public void setEndereco(String endereco) {
        this.endereco = endereco;
    }

    public int getEnd() {
        return end;
    }

    public void setEnd(int end) {
        this.end = end;
    }

    public String getOcorrencia() {
        return Ocorrencia;
    }

    public void setOcorrencia(String Ocorrencia) {
        this.Ocorrencia = Ocorrencia;
    }

    public int getCodOc() {
        return codOc;
    }

    public void setCodOc(int codOc) {
        this.codOc = codOc;
    }

    public String getDanos() {
        return Danos;
    }

    public void setDanos(String Danos) {
        this.Danos = Danos;
    }

    public int getCodDanos() {
        return codDanos;
    }

    public void setCodDanos(int codDanos) {
        this.codDanos = codDanos;
    }

    /**
     * Creates new form CadastroGeral
     */
    conectaBanco connect = new conectaBanco();

    public CadastroGeral() {
        initComponents();
        connect.conexao();
        taDescricao.setLineWrap(true);
        Nomes();
        //btn_associarV.setEnabled(false);
        TabelaNomes.getColumnModel().getColumn(0).setPreferredWidth(10);
        TabelaNomes.getColumnModel().getColumn(1).setPreferredWidth(160);
        btn_associarV.setEnabled(false);
        //jPanel4.setBackground(new Color(0,0,0,125));
    }

    public CadastroGeral(java.awt.Frame parent, boolean m) {
        super(parent, m);
        initComponents();
        connect.conexao();
        taDescricao.setLineWrap(true);
        Nomes();
        //btn_associarV.setEnabled(false);
        TabelaNomes.getColumnModel().getColumn(0).setPreferredWidth(10);
        TabelaNomes.getColumnModel().getColumn(1).setPreferredWidth(160);
        btn_associarV.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        taDescricao = new javax.swing.JTextArea();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        tfData = new javax.swing.JFormattedTextField();
        tfHora = new javax.swing.JFormattedTextField();
        tfDestino = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        tfBairro = new javax.swing.JTextField();
        tfAv_Rua = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        tfLocalizacao = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        tfCausas = new javax.swing.JTextField();
        cbSituacao = new javax.swing.JComboBox();
        cbProvincia = new javax.swing.JComboBox();
        tfDistrito_Cidade = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        btn_associarA = new javax.swing.JButton();
        btn_associarV = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        txtNrDanos = new javax.swing.JTextField();
        cbDanos = new javax.swing.JComboBox();
        cbOcorrencia = new javax.swing.JComboBox<>();
        btn_associarV1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TabelaNomes = new javax.swing.JTable();

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPanel4.setBackground(new java.awt.Color(153, 153, 153));
        jPanel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setFont(new java.awt.Font("Impact", 1, 36)); // NOI18N
        jLabel1.setText("Registo de Ocorrências");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(361, 361, 361))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel8.setText("* Descrição");

        taDescricao.setColumns(20);
        taDescricao.setRows(5);
        jScrollPane2.setViewportView(taDescricao);

        jLabel14.setText("* Data");

        jLabel15.setText("* Hora");

        try {
            tfData.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("####/##/##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            tfHora.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel2.setText("* Causas");

        jLabel3.setText("* Destino");

        jLabel5.setText("* Província");

        jLabel7.setText("Av/Rua");

        jLabel4.setText("* Bairro");

        jLabel17.setText("Local da ocorrência");

        jLabel19.setText("Nº  Danos");

        jLabel20.setText("* Danos");

        jLabel21.setText("* Tipo ocorrência");

        jLabel22.setText("* Situação");

        cbSituacao.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "------------------------------Selecione---------------------------", "Esclarecida", "Não Esclarecida", "Esclarecida arquivada", "Não Esclarecida Arquivada" }));

        cbProvincia.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "----------------------------selecione-----------------------------", "Niassa", "Cabo Delgado", "Nampula", "Zambézia", "Tete", "Manica", "Sofala", "Inhambane", "Gaza", "Maputo (província)", "Maputo (cidade)" }));
        cbProvincia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbProvinciaActionPerformed(evt);
            }
        });

        tfDistrito_Cidade.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                tfDistrito_CidadeMouseMoved(evt);
            }
        });
        tfDistrito_Cidade.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                tfDistrito_CidadeMouseExited(evt);
            }
        });
        tfDistrito_Cidade.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfDistrito_CidadeKeyTyped(evt);
            }
        });

        jLabel6.setText("* Distrito/Cidade");

        btn_associarA.setText("Associar Apreensão");
        btn_associarA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_associarAActionPerformed(evt);
            }
        });

        btn_associarV.setText("Associar Vitima");
        btn_associarV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_associarVActionPerformed(evt);
            }
        });

        jLabel9.setText("* Campos obrigatórios");

        txtNrDanos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNrDanosActionPerformed(evt);
            }
        });
        txtNrDanos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNrDanosKeyTyped(evt);
            }
        });

        cbDanos.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-------------------------selecione-------------------------", "Danos materiais avultados", "Danos materiais ligeiros", "Feridos graves", "Feridos ligeiros", "Perda de bens", "Óbitos", "Outros" }));

        cbOcorrencia.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "----------------------------selecione-----------------------------", "Acidente de Viação", "Agressão Física/Violação domestica", "Atropelamento Carro-Peão", "Incêndios", "Explosões e outras condutas especialmente perigosas", "Naufrágio de Barco", "Ofensas Corporais Qualificadas", "Participação em Motim", "Roubo concorrendo com homicídio", "Tráfico de Drogas" }));

        btn_associarV1.setText("Sem vitimas");
        btn_associarV1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_associarV1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jScrollPane2)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(cbOcorrencia, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(jPanel3Layout.createSequentialGroup()
                                            .addComponent(jLabel14)
                                            .addGap(138, 138, 138)
                                            .addComponent(jLabel15)
                                            .addGap(248, 248, 248)))
                                    .addGap(0, 0, Short.MAX_VALUE))
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel3Layout.createSequentialGroup()
                                            .addComponent(tfData, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(tfHora, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(tfBairro, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel4)
                                        .addComponent(tfAv_Rua, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel7)
                                        .addComponent(jLabel5)
                                        .addComponent(tfCausas, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(cbProvincia, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel8)
                                        .addComponent(jLabel21)
                                        .addComponent(jLabel2))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel20)
                                .addComponent(tfDestino)
                                .addComponent(cbSituacao, 0, 300, Short.MAX_VALUE)
                                .addComponent(tfDistrito_Cidade)
                                .addComponent(jLabel17)
                                .addComponent(tfLocalizacao)
                                .addComponent(jLabel19)
                                .addComponent(jLabel6)
                                .addComponent(jLabel22)
                                .addComponent(jLabel3)
                                .addComponent(txtNrDanos)
                                .addComponent(cbDanos, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(btn_associarA, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_associarV, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_associarV1, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel9)
                .addGap(31, 31, 31)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(jLabel15))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfData, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfHora, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel19)
                            .addComponent(jLabel21)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfLocalizacao, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbOcorrencia, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNrDanos, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tfCausas, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                    .addComponent(cbDanos))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbProvincia, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfDestino, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel22)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbSituacao, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfDistrito_Cidade, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfBairro, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfAv_Rua, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel8)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_associarA, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_associarV, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_associarV1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        TabelaNomes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Nome"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TabelaNomes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TabelaNomesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TabelaNomes);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 667, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cbProvinciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbProvinciaActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_cbProvinciaActionPerformed

    private void btn_associarAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_associarAActionPerformed
        // TODO add your handling code here:
        if (tfData.getText().equals("    /  /  ")) {
            JOptionPane.showMessageDialog(null, "Preecha o campo Data", "Atenção", JOptionPane.WARNING_MESSAGE);
            tfData.requestFocus();
            return;
        }
        if (tfHora.getText().equals("  :  ")) {
            JOptionPane.showMessageDialog(null, "Preecha o campo Hora", "Atenção", JOptionPane.WARNING_MESSAGE);
            tfHora.requestFocus();
            return;
        }
        if (cbOcorrencia.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null, "Selecione o tipo de ocorrência", "Atenção", JOptionPane.WARNING_MESSAGE);
            cbOcorrencia.requestFocus();
            return;
        }
        if (tfCausas.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Informe as causas", "Atenção", JOptionPane.WARNING_MESSAGE);
            tfCausas.requestFocus();
            return;
        }
        if (cbProvincia.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null, "Selecione a Provincia", "Atenção", JOptionPane.WARNING_MESSAGE);
            cbProvincia.requestFocus();
            return;
        }
        if (tfBairro.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Preecha o campo Bairro", "Atenção", JOptionPane.WARNING_MESSAGE);
            tfBairro.requestFocus();
            return;
        }
        if (txtNrDanos.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Sera inserido o numero de danos como 0", "Atenção", JOptionPane.WARNING_MESSAGE);
            txtNrDanos.setText("0");

            return;
        }
        if (cbDanos.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null, "Informe os danos causados", "Atenção", JOptionPane.WARNING_MESSAGE);
            cbDanos.requestFocus();
            return;
        }
        if (tfDestino.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Preecha o campo Destino", "Atenção", JOptionPane.WARNING_MESSAGE);
            tfDestino.requestFocus();
            return;
        }
        if (cbSituacao.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null, "Informe a situação", "Atenção", JOptionPane.WARNING_MESSAGE);
            cbSituacao.requestFocus();
            return;
        }
        if (tfDistrito_Cidade.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Preecha o campo Distrito", "Atenção", JOptionPane.WARNING_MESSAGE);
            tfDistrito_Cidade.requestFocus();
            return;
        }
        if (taDescricao.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Preecha o campo Descrição", "Atenção", JOptionPane.WARNING_MESSAGE);
            taDescricao.requestFocus();
            return;
        }

        if (TabelaNomes.getSelectedRowCount() == 0) {
            JOptionPane.showMessageDialog(null, "Selecione pelo menos uma elemento", "Atencao", JOptionPane.WARNING_MESSAGE);
            TabelaNomes.requestFocus();
            return;
        }
        RegOcorrencias();

        try {
            connect.conexao();
            PreparedStatement stmPessoaAutoria;
            int[] linhas = TabelaNomes.getSelectedRows();
            for (int i = (linhas.length - 1); i >= 0; --i) {
                connect.conexao();
                stmPessoaAutoria = connect.conn.prepareStatement("insert into autoria (codigo_pessoa, codigo_Ocorrencia) values(?,?)");
                stmPessoaAutoria.setString(1, (String) TabelaNomes.getModel().getValueAt(linhas[i], 0));
                codigoOcorrencia(getOcorrencia());
                stmPessoaAutoria.setInt(2, codOc);
                stmPessoaAutoria.executeUpdate();
                JOptionPane.showMessageDialog(null, "Apreensão registada com sucesso!", "Informação", JOptionPane.INFORMATION_MESSAGE);
            }

            // JOptionPane.showMessageDialog(null, "Apreensão registada com sucesso!", "Informação", JOptionPane.INFORMATION_MESSAGE);
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "Erro!" + erro.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
        btn_associarA.setEnabled(false);
        btn_associarV.setEnabled(true);
    }//GEN-LAST:event_btn_associarAActionPerformed

    private void TabelaNomesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TabelaNomesMouseClicked
        // TODO add your handling code here:


    }//GEN-LAST:event_TabelaNomesMouseClicked

    private void btn_associarVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_associarVActionPerformed
        // TODO add your handling code here:
        /*if (tfData.getText().equals("    /  /  ")) {
            JOptionPane.showMessageDialog(null, "Preecha o campo Data", "Atenção", JOptionPane.WARNING_MESSAGE);
            tfData.requestFocus();
            return;
        }
        if (tfHora.getText().equals("  :  ")) {
            JOptionPane.showMessageDialog(null, "Preecha o campo Hora", "Atenção", JOptionPane.WARNING_MESSAGE);
            tfHora.requestFocus();
            return;
        }
        if (cbOcorrencia.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null, "Selecione o tipo de ocorrência", "Atenção", JOptionPane.WARNING_MESSAGE);
            cbOcorrencia.requestFocus();
            return;
        }
        if (tfCausas.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Informe as causas", "Atenção", JOptionPane.WARNING_MESSAGE);
            tfCausas.requestFocus();
            return;
        }
        if (cbProvincia.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null, "Selecione a Provincia", "Atenção", JOptionPane.WARNING_MESSAGE);
            cbProvincia.requestFocus();
            return;
        }
        if (tfBairro.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Preecha o campo Bairro", "Atenção", JOptionPane.WARNING_MESSAGE);
            tfBairro.requestFocus();
            return;
        }
        if (txtNrDanos.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Sera inserido o numero de danos como 0", "Atenção", JOptionPane.WARNING_MESSAGE);
            txtNrDanos.setText("0");

            return;
        }
        if (cbDanos.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null, "Informe os danos causados", "Atenção", JOptionPane.WARNING_MESSAGE);
            cbDanos.requestFocus();
            return;
        }

        if (tfDestino.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Preecha o campo Destino", "Atenção", JOptionPane.WARNING_MESSAGE);
            tfDestino.requestFocus();
            return;
        }
        if (cbSituacao.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null, "Informe a situação", "Atenção", JOptionPane.WARNING_MESSAGE);
            cbSituacao.requestFocus();
            return;
        }
        if (tfDistrito_Cidade.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Preecha o campo Distrito", "Atenção", JOptionPane.WARNING_MESSAGE);
            tfDistrito_Cidade.requestFocus();
            return;
        }
        if (taDescricao.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Preecha o campo Descrição", "Atenção", JOptionPane.WARNING_MESSAGE);
            taDescricao.requestFocus();
            return;
        }
        if (TabelaNomes.getSelectedRowCount() == 0) {
            JOptionPane.showMessageDialog(null, "Selecione pelo menos uma elemento", "Atencao", JOptionPane.WARNING_MESSAGE);
            TabelaNomes.requestFocus();
            return;
        }*/

        try {
            connect.conexao();
            PreparedStatement stmPessoaAutoria;
            int[] linhas = TabelaNomes.getSelectedRows();
            for (int i = (linhas.length - 1); i >= 0; --i) {
                connect.conexao();
                stmPessoaAutoria = connect.conn.prepareStatement("insert into vitimizacao (codigo_pessoa_vit, codigo_Ocorrencia_vit) values(?,?)");
                stmPessoaAutoria.setString(1, (String) TabelaNomes.getModel().getValueAt(linhas[i], 0));
                codigoOcorrencia(getOcorrencia());
                stmPessoaAutoria.setInt(2, codOc);
                stmPessoaAutoria.executeUpdate();
                JOptionPane.showMessageDialog(null, "Vitima associada registada com sucesso!", "Informação", JOptionPane.INFORMATION_MESSAGE);
                Limpar();
                Habilitar();

                JOptionPane.showMessageDialog(null, "Ocorrencia Registrada com sucesso", "Mensagem", 1);
            }

            // JOptionPane.showMessageDialog(null, "Apreensão registada com sucesso!", "Informação", JOptionPane.INFORMATION_MESSAGE);
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "Erro!" + erro.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btn_associarVActionPerformed


    private void tfDistrito_CidadeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tfDistrito_CidadeMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_tfDistrito_CidadeMouseExited

    private void tfDistrito_CidadeMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tfDistrito_CidadeMouseMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_tfDistrito_CidadeMouseMoved

    private void tfDistrito_CidadeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfDistrito_CidadeKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_tfDistrito_CidadeKeyTyped

    private void txtNrDanosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNrDanosKeyTyped
        // TODO add your handling code here:
        String caracteres = "0987654321";
        if (!caracteres.contains(evt.getKeyChar() + "")) {
            evt.consume();
        }
    }//GEN-LAST:event_txtNrDanosKeyTyped

    private void txtNrDanosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNrDanosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNrDanosActionPerformed

    private void btn_associarV1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_associarV1ActionPerformed
        // TODO add your handling code here:
        Limpar();
        Habilitar();
        JOptionPane.showMessageDialog(null, "Ocorrencia Registrada com sucesso", "Mensagem", 1);
    }//GEN-LAST:event_btn_associarV1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadastroGeral.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadastroGeral.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadastroGeral.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadastroGeral.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CadastroGeral().setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TabelaNomes;
    private javax.swing.JButton btn_associarA;
    private javax.swing.JButton btn_associarV;
    private javax.swing.JButton btn_associarV1;
    private javax.swing.JComboBox cbDanos;
    private javax.swing.JComboBox<String> cbOcorrencia;
    private javax.swing.JComboBox cbProvincia;
    private javax.swing.JComboBox cbSituacao;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea taDescricao;
    private javax.swing.JTextField tfAv_Rua;
    private javax.swing.JTextField tfBairro;
    private javax.swing.JTextField tfCausas;
    private javax.swing.JFormattedTextField tfData;
    private javax.swing.JTextField tfDestino;
    private javax.swing.JTextField tfDistrito_Cidade;
    private javax.swing.JFormattedTextField tfHora;
    private javax.swing.JTextField tfLocalizacao;
    private javax.swing.JTextField txtNrDanos;
    // End of variables declaration//GEN-END:variables

    @Override
    public void Desabilitar() {
        cbSituacao.setEnabled(false);
        cbProvincia.setEnabled(false);
        tfAv_Rua.setEnabled(false);
        tfBairro.setEnabled(false);
        tfData.setEnabled(false);
        tfHora.setEnabled(false);
        taDescricao.setEnabled(false);
        cbOcorrencia.setEnabled(false);
        cbDanos.setEnabled(false);
        tfCausas.setEnabled(false);
        tfLocalizacao.setEnabled(false);
        tfLocalizacao.setEnabled(false);
        txtNrDanos.setEnabled(false);
        tfDestino.setEnabled(false);
        tfDistrito_Cidade.setEnabled(false);
        TabelaNomes.setEnabled(false);
        TabelaNomes.clearSelection();
        btn_associarV.setEnabled(false);
        btn_associarA.setEnabled(false);
        //btn_Cancelar.setEnabled(false);
    }

    @Override
    public void Habilitar() {
        cbSituacao.setEnabled(true);
        cbProvincia.setEnabled(true);
        tfAv_Rua.setEnabled(true);
        tfBairro.setEnabled(true);
        tfData.setEnabled(true);
        tfHora.setEnabled(true);
        taDescricao.setEnabled(true);
        cbOcorrencia.setEnabled(true);
        cbDanos.setEnabled(true);
        tfCausas.setEnabled(true);
        tfLocalizacao.setEnabled(true);
        tfLocalizacao.setEnabled(true);
        txtNrDanos.setEnabled(true);
        tfDestino.setEnabled(true);
        tfDistrito_Cidade.setEnabled(true);
        TabelaNomes.setEnabled(true);

        btn_associarA.setEnabled(true);
        btn_associarV.setEnabled(false);
        //btn_Cancelar.setEnabled(true);
        //btn_Novo.setEnabled(true);
    }

    @Override
    public void Limpar() {
        cbSituacao.setSelectedIndex(0);
        cbProvincia.setSelectedIndex(0);
        tfAv_Rua.setText(null);
        tfBairro.setText(null);
        tfData.setText(null);
        tfHora.setText(null);
        taDescricao.setText(null);
        cbOcorrencia.setSelectedIndex(0);
        cbDanos.setSelectedIndex(0);
        tfCausas.setText(null);
        tfLocalizacao.setText(null);
        txtNrDanos.setText("");
        tfDestino.setText(null);
        tfDistrito_Cidade.setText(null);
        TabelaNomes.clearSelection();
    }

    public void pegarIDendereco(String endereco) throws SQLException {
        connect.conexao();
        PreparedStatement stmEnd = connect.conn.prepareStatement("select * from endereco");
        connect.rs = stmEnd.executeQuery();
        connect.rs.last();
        end = connect.rs.getInt("cod_Endereco");

        connect.desconecta();
    }

    public void pegarIDSit(String situacao) throws SQLException {
        connect.conexao();
        PreparedStatement stmEnd = connect.conn.prepareStatement("select * from situacao");
        connect.rs = stmEnd.executeQuery();
        connect.rs.last();
        sit = connect.rs.getInt("cod_Situacao");

        connect.desconecta();
    }

    public void pegarIDtipoOc(String tipoOcorrenc) throws SQLException {
        connect.conexao();
        PreparedStatement stmEnd = connect.conn.prepareStatement("select * from tipocorrencia");
        connect.rs = stmEnd.executeQuery();
        connect.rs.last();
        tipOc = connect.rs.getInt("cod_tipo");

        connect.desconecta();
    }

    public void Nomes() {
        try {
            connect.conexao();
            PreparedStatement stmPessoa = connect.conn.prepareStatement("select * from Pessoa");
            connect.rs = stmPessoa.executeQuery();
            DefaultTableModel model = (DefaultTableModel) TabelaNomes.getModel();
            model.setNumRows(0);
            while (connect.rs.next()) {
                model.addRow(new Object[]{
                    connect.rs.getString("Cod_Pessoa"),
                    connect.rs.getString("Nome"),});
            }
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "Contacte o Administrador" + erro);
        }
    }

    public void codigoOcorrencia(String Ocorrencia) {
        try {
            connect.conexao();
            PreparedStatement CodigoDaOcor = connect.conn.prepareStatement("select * from Ocorrencia");
            connect.rs = CodigoDaOcor.executeQuery();
            connect.rs.last();
            codOc = connect.rs.getInt("cod_ocorrencia");
            connect.desconecta();
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "Contacte o Administrador" + erro);
        }
    }

    public void codigoDanos(String Danos) {
        try {
            connect.conexao();
            PreparedStatement CodigoDaOcor = connect.conn.prepareStatement("select * from Danos");
            connect.rs = CodigoDaOcor.executeQuery();
            connect.rs.last();
            codDanos = connect.rs.getInt("cod_Danos");
            connect.desconecta();
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "Contacte o Administrador" + erro);
        }
    }

    public void RegOcorrencias() {
        try {//prepara o codigo SQL

            connect.conexao();
            String sqlOc = "insert into ocorrencia(data,hora,descricao,causas,destino,cod_END,cod_situacao,Cod_tipoOcorrencia)"
                    + "values(?,?,?,?,?,?,?,?)";
            String sqlEnd = "insert into Endereco(Provincia, distrito_cidade, bairro, av_rua)values"
                    + "(?,?,?,?)";
            String sqlTipo = "insert into tipocorrencia(nome)values(?)";
            String sqlSitituacao = "insert into situacao(nome)values(?)";
            String SqlDanos = "insert into danos(nome)values(?)";
            String Sqlresultado = "insert into resultado (Codigo_ocorrencia, codigo_Danos, nr_danos) values(?,?,?)";
            //String SqlAutoria = "insert into autoria (Codigo_pessoa, codigo_ocorrencia) values(?,?)";
            //String Sqlvitima = "insert into vitimizacao (Codigo_pessoa, codigo_ocorrencia) values(?,?)";

            //--------------------------------prepatedStatments-------------------------------------------------------// 
            PreparedStatement stmOc = connect.conn.prepareStatement(sqlOc);
            PreparedStatement stmEnd = connect.conn.prepareStatement(sqlEnd);
            PreparedStatement stmTipo = connect.conn.prepareStatement(sqlTipo);
            PreparedStatement stmSituacao = connect.conn.prepareStatement(sqlSitituacao);
            PreparedStatement stmDanos = connect.conn.prepareStatement(SqlDanos);
            //PreparedStatement stmAutoria = connect.conn.prepareStatement(SqlAutoria);
            //PreparedStatement stmVitima = connect.conn.prepareStatement(Sqlvitima);
            PreparedStatement stmRes = connect.conn.prepareStatement(Sqlresultado);

            //endereco
            stmEnd.setString(1, cbProvincia.getSelectedItem().toString());
            stmEnd.setString(2, tfDistrito_Cidade.getText());
            stmEnd.setString(3, tfBairro.getText());
            stmEnd.setString(4, tfAv_Rua.getText());
            stmEnd.executeUpdate();

            //situacao
            stmSituacao.setString(1, cbSituacao.getSelectedItem().toString());
            stmSituacao.executeUpdate();

            //tipo
            stmTipo.setString(1, cbOcorrencia.getSelectedItem().toString());
            stmTipo.executeUpdate();

            //ocorrencias
            stmOc.setString(1, tfData.getText());
            stmOc.setString(2, tfHora.getText());
            stmOc.setString(3, taDescricao.getText());
            stmOc.setString(4, tfCausas.getText());
            stmOc.setString(5, tfDestino.getText());
            pegarIDendereco(getEndereco());
            stmOc.setInt(6, end);
            pegarIDSit(getSituacao());
            stmOc.setInt(7, sit);
            pegarIDtipoOc(getTipoOcorrenc());
            stmOc.setInt(8, tipOc);
            stmOc.executeUpdate();

            //danos
            stmDanos.setString(1, cbDanos.getSelectedItem().toString());
            stmDanos.executeUpdate();

            //resultados
            codigoOcorrencia(getOcorrencia());
            stmRes.setInt(1, codOc);
            codigoDanos(getDanos());
            stmRes.setInt(2, codDanos);
            stmRes.setString(3, txtNrDanos.getText());
            stmRes.executeUpdate();

            // connect.desconecta();
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "Erro!" + erro.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }

    }

}
