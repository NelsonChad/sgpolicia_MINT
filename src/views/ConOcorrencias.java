/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views;

import java.sql.PreparedStatement;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;
import dao.conectaBanco;
import java.sql.ResultSet;

/**
 *
 * @author DETEC_IT
 */
public class ConOcorrencias extends javax.swing.JDialog {

    int navegacao = 1;
    conectaBanco connect = new conectaBanco();

    /**
     * Creates new form ConOcorrencias
     */
    public ConOcorrencias(java.awt.Frame dialog, boolean modal) {
        super(dialog, modal);
        initComponents();
        jTextAreaDesc.setEditable(false);
        connect.conexao();
    }

    public ConOcorrencias() {
        initComponents();
        connect.conexao();
        jTextAreaDesc.setEditable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextAreaDesc = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTablePesquisa = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableAutor = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTableVitimas = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jComboBox2 = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        pescTF = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Descrição da Ocorrência"));

        jTextAreaDesc.setColumns(20);
        jTextAreaDesc.setRows(5);
        jScrollPane3.setViewportView(jTextAreaDesc);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Ocorrências"));

        jTablePesquisa.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTablePesquisa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTablePesquisaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTablePesquisa);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1259, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Autor (s)"));

        jTableAutor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(jTableAutor);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Vitima(s)"));

        jTableVitimas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane4.setViewportView(jTableVitimas);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Filtros de Informacao"));

        jLabel1.setText("Ocorrências que resultaram em:");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-------------selecione----------","Danos Materias Avultados","Feridos Graves", "Feridos Ligeiros","Obitos" }));
        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "------------Selecione---------", "Esclarecida", "Não Esclarecida", "Esclarecida arquivada", "Não Esclarecida Arquivada" }));
        jComboBox2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox2ItemStateChanged(evt);
            }
        });
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jLabel2.setText("Pesquizar por data:");

        pescTF.setText("                aaaa - mm - dd");
        pescTF.setToolTipText("Coloque a data no formato AAA-MM-DD");
        pescTF.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                pescTFMousePressed(evt);
            }
        });
        pescTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                pescTFKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                pescTFKeyTyped(evt);
            }
        });

        jLabel3.setText("pesquisar quanto a situacao:");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(83, 83, 83)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(pescTF, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(pescTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addContainerGap(54, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:

        navegacao = 1;
        if (jComboBox1.getSelectedIndex() == 4) {
            //Setando novo modelo de clientes para a tbl d pesquisa:
            jTablePesquisa.setModel(new DefaultTableModel(
                    new Object[][]{},
                    new String[]{"Código da ocorrência", "Tipo de Ocorrência", "Causas", "Danos", "Número de danos", "Data", "Horas"}
            )//Linhas ineditaveis:
            {
                @Override
                public boolean isCellEditable(int row, int col) {
                    return false;
                }
            }//fim
            );
            jTablePesquisa.getColumnModel().getColumn(0).setPreferredWidth(20);
            jTablePesquisa.getColumnModel().getColumn(1).setPreferredWidth(200);
            jTablePesquisa.getColumnModel().getColumn(2).setPreferredWidth(150);
            jTablePesquisa.getColumnModel().getColumn(3).setPreferredWidth(50);
            jTablePesquisa.getColumnModel().getColumn(4).setPreferredWidth(100);
            jTablePesquisa.getColumnModel().getColumn(5).setPreferredWidth(100);
            jTablePesquisa.getColumnModel().getColumn(6).setPreferredWidth(100);
            jTablePesquisa.getColumnModel().getColumn(0).setResizable(false);
            jTablePesquisa.getColumnModel().getColumn(1).setResizable(false);
            jTablePesquisa.getColumnModel().getColumn(2).setResizable(false);
            jTablePesquisa.getColumnModel().getColumn(3).setResizable(false);
            jTablePesquisa.getColumnModel().getColumn(4).setResizable(false);
            jTablePesquisa.getColumnModel().getColumn(5).setResizable(false);
            jTablePesquisa.getColumnModel().getColumn(6).setResizable(false);
            jTablePesquisa.getTableHeader().setReorderingAllowed(false);
            //jTablePesquisa.setAutoResizeMode(jTablePesquisa.AUTO_RESIZE_OFF);
            jTablePesquisa.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
            try {
                connect.conexao();
                PreparedStatement ob = connect.conn.prepareStatement("Select T.nome, O.Cod_Ocorrencia,Causas, D.nome, R.nr_danos, Data,Hora\n"
                        + "From ocorrencia O, Resultado R, Tipocorrencia T, Danos D\n"
                        + "Where O.Cod_ocorrencia = R.Codigo_ocorrencia\n"
                        + "and o.cod_tipoOcorrencia = T.cod_tipo\n"
                        + "and D.cod_danos =R.codigo_danos\n"
                        + "and D.nome like '%OB%'");
                connect.rs = ob.executeQuery();
                DefaultTableModel model = (DefaultTableModel) jTablePesquisa.getModel();
                model.setNumRows(0);
                while (connect.rs.next()) {
                    model.addRow(new Object[]{
                        connect.rs.getString("O.Cod_Ocorrencia"),
                        connect.rs.getString("T.Nome"),
                        connect.rs.getString("O.Causas"),
                        connect.rs.getString("D.Nome"),
                        connect.rs.getString("R.nr_Danos"),
                        connect.rs.getString("Data"),
                        connect.rs.getString("Hora"),});
                }
                verifTab();
            } catch (SQLException erro) {
                JOptionPane.showMessageDialog(null, "Contacte o Administrador" + erro);
            }
        }
        //feridos graves
        if (jComboBox1.getSelectedIndex() == 2) {
            //Setando novo modelo de clientes para a tbl d pesquisa:
            jTablePesquisa.setModel(new DefaultTableModel(
                    new Object[][]{},
                    new String[]{"Código da ocorrência", "Tipo de Ocorrência", "Causas", "Danos", "Número de danos", "Data", "Horas"}
            )//Linhas ineditaveis:
            {
                @Override
                public boolean isCellEditable(int row, int col) {
                    return false;
                }
            }//fim
            );
            jTablePesquisa.getColumnModel().getColumn(0).setPreferredWidth(20);
            jTablePesquisa.getColumnModel().getColumn(1).setPreferredWidth(200);
            jTablePesquisa.getColumnModel().getColumn(2).setPreferredWidth(150);
            jTablePesquisa.getColumnModel().getColumn(3).setPreferredWidth(50);
            jTablePesquisa.getColumnModel().getColumn(4).setPreferredWidth(100);
            jTablePesquisa.getColumnModel().getColumn(5).setPreferredWidth(100);
            jTablePesquisa.getColumnModel().getColumn(6).setPreferredWidth(100);
            jTablePesquisa.getColumnModel().getColumn(0).setResizable(false);
            jTablePesquisa.getColumnModel().getColumn(1).setResizable(false);
            jTablePesquisa.getColumnModel().getColumn(2).setResizable(false);
            jTablePesquisa.getColumnModel().getColumn(3).setResizable(false);
            jTablePesquisa.getColumnModel().getColumn(4).setResizable(false);
            jTablePesquisa.getColumnModel().getColumn(5).setResizable(false);
            jTablePesquisa.getColumnModel().getColumn(6).setResizable(false);
            jTablePesquisa.getTableHeader().setReorderingAllowed(false);
            //jTablePesquisa.setAutoResizeMode(jTablePesquisa.AUTO_RESIZE_OFF);
            jTablePesquisa.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
            try {
                PreparedStatement ob = connect.conn.prepareStatement("Select T.nome, O.Cod_Ocorrencia,Causas, D.nome, R.nr_danos, Data,Hora\n"
                        + "From ocorrencia O, Resultado R, Tipocorrencia T, Danos D\n"
                        + "Where O.Cod_ocorrencia = R.Codigo_ocorrencia\n"
                        + "and o.cod_tipoOcorrencia = T.cod_tipo\n"
                        + "and D.cod_danos =R.codigo_danos\n"
                        + "and D.nome like '%Feridos Graves%'");
                connect.rs = ob.executeQuery();
                DefaultTableModel model = (DefaultTableModel) jTablePesquisa.getModel();
                model.setNumRows(0);
                while (connect.rs.next()) {
                    model.addRow(new Object[]{
                        connect.rs.getString("O.Cod_Ocorrencia"),
                        connect.rs.getString("T.Nome"),
                        connect.rs.getString("O.Causas"),
                        connect.rs.getString("D.Nome"),
                        connect.rs.getString("R.nr_Danos"),
                        connect.rs.getString("Data"),
                        connect.rs.getString("Hora"),});
                }
                verifTab();
            } catch (SQLException erro) {
                JOptionPane.showMessageDialog(null, "Contacte o Administrador" + erro);
            }
        }
        //feridos graves
        if (jComboBox1.getSelectedIndex() == 3) {
            //Setando novo modelo de clientes para a tbl d pesquisa:
            jTablePesquisa.setModel(new DefaultTableModel(
                    new Object[][]{},
                    new String[]{"Código da ocorrência", "Tipo de Ocorrência", "Causas", "Danos", "Número de danos", "Data", "Horas"}
            )//Linhas ineditaveis:
            {
                @Override
                public boolean isCellEditable(int row, int col) {
                    return false;
                }
            }//fim
            );
            jTablePesquisa.getColumnModel().getColumn(0).setPreferredWidth(20);
            jTablePesquisa.getColumnModel().getColumn(1).setPreferredWidth(200);
            jTablePesquisa.getColumnModel().getColumn(2).setPreferredWidth(150);
            jTablePesquisa.getColumnModel().getColumn(3).setPreferredWidth(50);
            jTablePesquisa.getColumnModel().getColumn(4).setPreferredWidth(100);
            jTablePesquisa.getColumnModel().getColumn(5).setPreferredWidth(100);
            jTablePesquisa.getColumnModel().getColumn(6).setPreferredWidth(100);
            jTablePesquisa.getColumnModel().getColumn(0).setResizable(false);
            jTablePesquisa.getColumnModel().getColumn(1).setResizable(false);
            jTablePesquisa.getColumnModel().getColumn(2).setResizable(false);
            jTablePesquisa.getColumnModel().getColumn(3).setResizable(false);
            jTablePesquisa.getColumnModel().getColumn(4).setResizable(false);
            jTablePesquisa.getColumnModel().getColumn(5).setResizable(false);
            jTablePesquisa.getColumnModel().getColumn(6).setResizable(false);
            jTablePesquisa.getTableHeader().setReorderingAllowed(false);
            //jTablePesquisa.setAutoResizeMode(jTablePesquisa.AUTO_RESIZE_OFF);
            jTablePesquisa.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
            try {
                connect.conexao();
                PreparedStatement ob = connect.conn.prepareStatement("Select T.nome, O.Cod_Ocorrencia,Causas, D.nome, R.nr_danos, Data,Hora\n"
                        + "From ocorrencia O, Resultado R, Tipocorrencia T, Danos D\n"
                        + "Where O.Cod_ocorrencia = R.Codigo_ocorrencia\n"
                        + "and o.cod_tipoOcorrencia = T.cod_tipo\n"
                        + "and D.cod_danos =R.codigo_danos\n"
                        + "and D.nome like '%Feridos Ligeiros%'");
                connect.rs = ob.executeQuery();
                DefaultTableModel model = (DefaultTableModel) jTablePesquisa.getModel();
                model.setNumRows(0);
                while (connect.rs.next()) {
                    model.addRow(new Object[]{
                        connect.rs.getString("O.Cod_Ocorrencia"),
                        connect.rs.getString("T.Nome"),
                        connect.rs.getString("O.Causas"),
                        connect.rs.getString("D.Nome"),
                        connect.rs.getString("R.nr_Danos"),
                        connect.rs.getString("Data"),
                        connect.rs.getString("Hora"),});
                }
                verifTab();
            } catch (SQLException erro) {
                JOptionPane.showMessageDialog(null, "Contacte o Administrador" + erro);
            }
        }

//DANOS AVULTADOS
        if (jComboBox1.getSelectedIndex() == 1) {
            //Setando novo modelo de clientes para a tbl d pesquisa:
            jTablePesquisa.setModel(new DefaultTableModel(
                    new Object[][]{},
                    new String[]{"Código da ocorrência", "Tipo de Ocorrência", "Causas", "Danos", "Número de danos", "Data", "Horas"}
            )//Linhas ineditaveis:
            {
                @Override
                public boolean isCellEditable(int row, int col) {
                    return false;
                }
            }//fim
            );
            jTablePesquisa.getColumnModel().getColumn(0).setPreferredWidth(20);
            jTablePesquisa.getColumnModel().getColumn(1).setPreferredWidth(200);
            jTablePesquisa.getColumnModel().getColumn(2).setPreferredWidth(150);
            jTablePesquisa.getColumnModel().getColumn(3).setPreferredWidth(50);
            jTablePesquisa.getColumnModel().getColumn(4).setPreferredWidth(100);
            jTablePesquisa.getColumnModel().getColumn(5).setPreferredWidth(100);
            jTablePesquisa.getColumnModel().getColumn(6).setPreferredWidth(100);
            jTablePesquisa.getColumnModel().getColumn(0).setResizable(false);
            jTablePesquisa.getColumnModel().getColumn(1).setResizable(false);
            jTablePesquisa.getColumnModel().getColumn(2).setResizable(false);
            jTablePesquisa.getColumnModel().getColumn(3).setResizable(false);
            jTablePesquisa.getColumnModel().getColumn(4).setResizable(false);
            jTablePesquisa.getColumnModel().getColumn(5).setResizable(false);
            jTablePesquisa.getColumnModel().getColumn(6).setResizable(false);
            jTablePesquisa.getTableHeader().setReorderingAllowed(false);
            //jTablePesquisa.setAutoResizeMode(jTablePesquisa.AUTO_RESIZE_OFF);
            jTablePesquisa.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
            try {
                connect.conexao();

                PreparedStatement ob = connect.conn.prepareStatement("Select T.nome, O.Cod_Ocorrencia,Causas, D.nome, R.nr_danos, Data,Hora\n"
                        + "From ocorrencia O, Resultado R, Tipocorrencia T, Danos D\n"
                        + "Where O.Cod_ocorrencia = R.Codigo_ocorrencia\n"
                        + "and o.cod_tipoOcorrencia = T.cod_tipo\n"
                        + "and D.cod_danos =R.codigo_danos\n"
                        + "and D.nome like '%Danos materiais avultados%'");
                connect.rs = ob.executeQuery();
                DefaultTableModel model = (DefaultTableModel) jTablePesquisa.getModel();
                model.setNumRows(0);
                while (connect.rs.next()) {
                    model.addRow(new Object[]{
                        connect.rs.getString("O.Cod_Ocorrencia"),
                        connect.rs.getString("T.Nome"),
                        connect.rs.getString("O.Causas"),
                        connect.rs.getString("D.Nome"),
                        connect.rs.getString("R.nr_Danos"),
                        connect.rs.getString("Data"),
                        connect.rs.getString("Hora"),});
                }
                verifTab();
            } catch (SQLException erro) {
                JOptionPane.showMessageDialog(null, "Contacte o Administrador" + erro);
            }
        }
        if (jComboBox1.getSelectedIndex() == 0) {
            //remove linhas nas tabelas
            DefaultTableModel modelo, modeloVit;
            modelo = (DefaultTableModel) jTablePesquisa.getModel();
            modelo.setNumRows(0);
            modeloVit = (DefaultTableModel) jTableVitimas.getModel();
            modeloVit.setNumRows(0);
            jTextAreaDesc.setText("");

        }

    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jTablePesquisaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTablePesquisaMouseClicked
        // TODO add your handling code here:
        Descricao();
        Autores();
        Vitimas();
    }//GEN-LAST:event_jTablePesquisaMouseClicked

    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged
        // TODO add your handling code here:
        cleanTabela();
    }//GEN-LAST:event_jComboBox1ItemStateChanged

    private void pescTFKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pescTFKeyTyped
        // TODO add your handling code here:               

        String caracteres = "0987654321-/ ";
        if (!caracteres.contains(evt.getKeyChar() + "")) {
            evt.consume();
        }
        navegacao = 0;
        jTablePesquisa.setModel(new DefaultTableModel(
                new Object[][]{},
                new String[]{"Código da ocorrência", "Tipo de Ocorrência", "Causas", "Danos", "Número de danos", "Data", "Horas"}
        )//Linhas ineditaveis:
        {
            @Override
            public boolean isCellEditable(int row, int col) {
                return false;
            }
        }//fim
        );

        //fim
        jTablePesquisa.getColumnModel().getColumn(0).setPreferredWidth(20);
        jTablePesquisa.getColumnModel().getColumn(1).setPreferredWidth(200);
        jTablePesquisa.getColumnModel().getColumn(2).setPreferredWidth(150);
        jTablePesquisa.getColumnModel().getColumn(3).setPreferredWidth(50);
        jTablePesquisa.getColumnModel().getColumn(4).setPreferredWidth(100);
        jTablePesquisa.getColumnModel().getColumn(5).setPreferredWidth(100);
        jTablePesquisa.getColumnModel().getColumn(6).setPreferredWidth(100);
        jTablePesquisa.getColumnModel().getColumn(0).setResizable(false);
        jTablePesquisa.getColumnModel().getColumn(1).setResizable(false);
        jTablePesquisa.getColumnModel().getColumn(2).setResizable(false);
        jTablePesquisa.getColumnModel().getColumn(3).setResizable(false);
        jTablePesquisa.getColumnModel().getColumn(4).setResizable(false);
        jTablePesquisa.getColumnModel().getColumn(5).setResizable(false);
        jTablePesquisa.getColumnModel().getColumn(6).setResizable(false);
        jTablePesquisa.getTableHeader().setReorderingAllowed(false);
        //jTablePesquisa.setAutoResizeMode(jTablePesquisa.AUTO_RESIZE_OFF);
        jTablePesquisa.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        try {
            connect.conexao();
            PreparedStatement ob = connect.conn.prepareStatement("Select T.nome, O.Cod_Ocorrencia,Causas, D.nome, R.nr_danos, Data,Hora\n"
                    + "From ocorrencia O, Resultado R, Tipocorrencia T, Danos D\n"
                    + "Where O.Cod_ocorrencia = R.Codigo_ocorrencia\n"
                    + "and o.cod_tipoOcorrencia = T.cod_tipo\n"
                    + "and D.cod_danos =R.codigo_danos\n"
                    + "and Data like ?");

            ob.setString(1, "%" + pescTF.getText() + "%");
            connect.rs = ob.executeQuery();

            DefaultTableModel model = (DefaultTableModel) jTablePesquisa.getModel();
            model.setNumRows(0);
            while (connect.rs.next()) {
                model.addRow(new Object[]{
                    connect.rs.getString("O.Cod_Ocorrencia"),
                    connect.rs.getString("T.Nome"),
                    connect.rs.getString("O.Causas"),
                    connect.rs.getString("D.Nome"),
                    connect.rs.getString("R.nr_Danos"),
                    connect.rs.getString("Data"),
                    connect.rs.getString("Hora"),});
            }

            if (model.getRowCount() == 0) {
                JOptionPane.showMessageDialog(null, "nenhum registro foi encontrado nessa data", "Atenção", 2);

                jTableAutor.setModel(new DefaultTableModel(
                        new Object[][]{},
                        new String[]{"Código da ocorrência", "Tipo de Ocorrência", "Causas", "Danos", "Número de danos", "Data", "Horas"}
                ));
                jTableVitimas.setModel(new DefaultTableModel(
                        new Object[][]{},
                        new String[]{"Código da ocorrência", "Tipo de Ocorrência", "Causas", "Danos", "Número de danos", "Data", "Horas"}
                ));
                jTextAreaDesc.setText(null);
            }
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "Contacte o Administrador" + erro);
        }


    }//GEN-LAST:event_pescTFKeyTyped

    private void pescTFKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pescTFKeyPressed
        // TODO add your handling code here
    }//GEN-LAST:event_pescTFKeyPressed

    private void pescTFMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pescTFMousePressed
        // TODO add your handling code here:
        pescTF.setText(null);

    }//GEN-LAST:event_pescTFMousePressed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
        navegacao = 1;
        if (jComboBox2.getSelectedIndex() == 4) {
            //Setando novo modelo de clientes para a tbl d pesquisa:
            jTablePesquisa.setModel(new DefaultTableModel(
                    new Object[][]{},
                    new String[]{"Código da ocorrência", "Tipo de Ocorrência", "Causas", "Danos", "Número de danos", "Data", "Horas"}
            )//Linhas ineditaveis:
            {
                @Override
                public boolean isCellEditable(int row, int col) {
                    return false;
                }
            }//fim
            );
            jTablePesquisa.getColumnModel().getColumn(0).setPreferredWidth(20);
            jTablePesquisa.getColumnModel().getColumn(1).setPreferredWidth(200);
            jTablePesquisa.getColumnModel().getColumn(2).setPreferredWidth(150);
            jTablePesquisa.getColumnModel().getColumn(3).setPreferredWidth(50);
            jTablePesquisa.getColumnModel().getColumn(4).setPreferredWidth(100);
            jTablePesquisa.getColumnModel().getColumn(5).setPreferredWidth(100);
            jTablePesquisa.getColumnModel().getColumn(6).setPreferredWidth(100);
            jTablePesquisa.getColumnModel().getColumn(0).setResizable(false);
            jTablePesquisa.getColumnModel().getColumn(1).setResizable(false);
            jTablePesquisa.getColumnModel().getColumn(2).setResizable(false);
            jTablePesquisa.getColumnModel().getColumn(3).setResizable(false);
            jTablePesquisa.getColumnModel().getColumn(4).setResizable(false);
            jTablePesquisa.getColumnModel().getColumn(5).setResizable(false);
            jTablePesquisa.getColumnModel().getColumn(6).setResizable(false);
            jTablePesquisa.getTableHeader().setReorderingAllowed(false);
            //jTablePesquisa.setAutoResizeMode(jTablePesquisa.AUTO_RESIZE_OFF);
            jTablePesquisa.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
            try {
                connect.conexao();
                PreparedStatement ob = connect.conn.prepareStatement("Select T.nome, O.Cod_Ocorrencia,Causas, D.nome, R.nr_danos, Data,Hora\n"
                        + "From ocorrencia O, Resultado R, Tipocorrencia T, Danos D ,situacao S\n"
                        + "Where O.Cod_ocorrencia = R.Codigo_ocorrencia\n"
                        + "and o.cod_tipoOcorrencia = T.cod_tipo\n"
                        + "and D.cod_danos = R.codigo_danos\n"
                        + "and S.Cod_situacao = O.Cod_Situacao\n"
                        + "and S.nome like 'Não Esclarecida arquivada'");
                connect.rs = ob.executeQuery();
                DefaultTableModel model = (DefaultTableModel) jTablePesquisa.getModel();
                model.setNumRows(0);
                while (connect.rs.next()) {
                    model.addRow(new Object[]{
                        connect.rs.getString("O.Cod_Ocorrencia"),
                        connect.rs.getString("T.Nome"),
                        connect.rs.getString("O.Causas"),
                        connect.rs.getString("D.Nome"),
                        connect.rs.getString("R.nr_Danos"),
                        connect.rs.getString("Data"),
                        connect.rs.getString("Hora"),});
                }
                verifTab();
            } catch (SQLException erro) {
                JOptionPane.showMessageDialog(null, "Contacte o Administrador" + erro);
            }
        }
        //feridos graves
        if (jComboBox2.getSelectedIndex() == 2) {
            //Setando novo modelo de clientes para a tbl d pesquisa:
            jTablePesquisa.setModel(new DefaultTableModel(
                    new Object[][]{},
                    new String[]{"Código da ocorrência", "Tipo de Ocorrência", "Causas", "Danos", "Número de danos", "Data", "Horas"}
            )//Linhas ineditaveis:
            {
                @Override
                public boolean isCellEditable(int row, int col) {
                    return false;
                }
            }//fim
            );
            jTablePesquisa.getColumnModel().getColumn(0).setPreferredWidth(20);
            jTablePesquisa.getColumnModel().getColumn(1).setPreferredWidth(200);
            jTablePesquisa.getColumnModel().getColumn(2).setPreferredWidth(150);
            jTablePesquisa.getColumnModel().getColumn(3).setPreferredWidth(50);
            jTablePesquisa.getColumnModel().getColumn(4).setPreferredWidth(100);
            jTablePesquisa.getColumnModel().getColumn(5).setPreferredWidth(100);
            jTablePesquisa.getColumnModel().getColumn(6).setPreferredWidth(100);
            jTablePesquisa.getColumnModel().getColumn(0).setResizable(false);
            jTablePesquisa.getColumnModel().getColumn(1).setResizable(false);
            jTablePesquisa.getColumnModel().getColumn(2).setResizable(false);
            jTablePesquisa.getColumnModel().getColumn(3).setResizable(false);
            jTablePesquisa.getColumnModel().getColumn(4).setResizable(false);
            jTablePesquisa.getColumnModel().getColumn(5).setResizable(false);
            jTablePesquisa.getColumnModel().getColumn(6).setResizable(false);
            jTablePesquisa.getTableHeader().setReorderingAllowed(false);
            //jTablePesquisa.setAutoResizeMode(jTablePesquisa.AUTO_RESIZE_OFF);
            jTablePesquisa.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
            try {
                PreparedStatement ob = connect.conn.prepareStatement("Select T.nome, O.Cod_Ocorrencia,Causas, D.nome, R.nr_danos, Data,Hora\n"
                        + "From ocorrencia O, Resultado R, Tipocorrencia T, Danos D ,situacao S\n"
                        + "Where O.Cod_ocorrencia = R.Codigo_ocorrencia\n"
                        + "and o.cod_tipoOcorrencia = T.cod_tipo\n"
                        + "and D.cod_danos = R.codigo_danos\n"
                        + "and S.Cod_situacao = O.Cod_Situacao\n"
                        + "and S.nome like 'Não Esclarecida'");
                connect.rs = ob.executeQuery();
                DefaultTableModel model = (DefaultTableModel) jTablePesquisa.getModel();
                model.setNumRows(0);
                while (connect.rs.next()) {
                    model.addRow(new Object[]{
                        connect.rs.getString("O.Cod_Ocorrencia"),
                        connect.rs.getString("T.Nome"),
                        connect.rs.getString("O.Causas"),
                        connect.rs.getString("D.Nome"),
                        connect.rs.getString("R.nr_Danos"),
                        connect.rs.getString("Data"),
                        connect.rs.getString("Hora"),});
                }
                verifTab();
            } catch (SQLException erro) {
                JOptionPane.showMessageDialog(null, "Contacte o Administrador" + erro);
            }
        }
        //feridos graves
        if (jComboBox2.getSelectedIndex() == 3) {
            //Setando novo modelo de clientes para a tbl d pesquisa:
            jTablePesquisa.setModel(new DefaultTableModel(
                    new Object[][]{},
                    new String[]{"Código da ocorrência", "Tipo de Ocorrência", "Causas", "Danos", "Número de danos", "Data", "Horas"}
            )//Linhas ineditaveis:
            {
                @Override
                public boolean isCellEditable(int row, int col) {
                    return false;
                }
            }//fim
            );
            jTablePesquisa.getColumnModel().getColumn(0).setPreferredWidth(20);
            jTablePesquisa.getColumnModel().getColumn(1).setPreferredWidth(200);
            jTablePesquisa.getColumnModel().getColumn(2).setPreferredWidth(150);
            jTablePesquisa.getColumnModel().getColumn(3).setPreferredWidth(50);
            jTablePesquisa.getColumnModel().getColumn(4).setPreferredWidth(100);
            jTablePesquisa.getColumnModel().getColumn(5).setPreferredWidth(100);
            jTablePesquisa.getColumnModel().getColumn(6).setPreferredWidth(100);
            jTablePesquisa.getColumnModel().getColumn(0).setResizable(false);
            jTablePesquisa.getColumnModel().getColumn(1).setResizable(false);
            jTablePesquisa.getColumnModel().getColumn(2).setResizable(false);
            jTablePesquisa.getColumnModel().getColumn(3).setResizable(false);
            jTablePesquisa.getColumnModel().getColumn(4).setResizable(false);
            jTablePesquisa.getColumnModel().getColumn(5).setResizable(false);
            jTablePesquisa.getColumnModel().getColumn(6).setResizable(false);
            jTablePesquisa.getTableHeader().setReorderingAllowed(false);
            //jTablePesquisa.setAutoResizeMode(jTablePesquisa.AUTO_RESIZE_OFF);
            jTablePesquisa.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
            try {
                connect.conexao();
                PreparedStatement ob = connect.conn.prepareStatement("Select T.nome, O.Cod_Ocorrencia,Causas, D.nome, R.nr_danos, Data,Hora\n"
                        + "From ocorrencia O, Resultado R, Tipocorrencia T, Danos D ,situacao S\n"
                        + "Where O.Cod_ocorrencia = R.Codigo_ocorrencia\n"
                        + "and o.cod_tipoOcorrencia = T.cod_tipo\n"
                        + "and D.cod_danos = R.codigo_danos\n"
                        + "and S.Cod_situacao = O.Cod_Situacao\n"
                        + "and S.nome like 'Esclarecida arquivada'");
                connect.rs = ob.executeQuery();
                DefaultTableModel model = (DefaultTableModel) jTablePesquisa.getModel();
                model.setNumRows(0);
                while (connect.rs.next()) {
                    model.addRow(new Object[]{
                        connect.rs.getString("O.Cod_Ocorrencia"),
                        connect.rs.getString("T.Nome"),
                        connect.rs.getString("O.Causas"),
                        connect.rs.getString("D.Nome"),
                        connect.rs.getString("R.nr_Danos"),
                        connect.rs.getString("Data"),
                        connect.rs.getString("Hora"),});
                }
                verifTab();
            } catch (SQLException erro) {
                JOptionPane.showMessageDialog(null, "Contacte o Administrador" + erro);
            }
        }

//DANOS AVULTADOS
        if (jComboBox2.getSelectedIndex() == 1) {
            //Setando novo modelo de clientes para a tbl d pesquisa:
            jTablePesquisa.setModel(new DefaultTableModel(
                    new Object[][]{},
                    new String[]{"Código da ocorrência", "Tipo de Ocorrência", "Causas", "Danos", "Número de danos", "Data", "Horas"}
            )//Linhas ineditaveis:
            {
                @Override
                public boolean isCellEditable(int row, int col) {
                    return false;
                }
            }//fim
            );
            jTablePesquisa.getColumnModel().getColumn(0).setPreferredWidth(20);
            jTablePesquisa.getColumnModel().getColumn(1).setPreferredWidth(200);
            jTablePesquisa.getColumnModel().getColumn(2).setPreferredWidth(150);
            jTablePesquisa.getColumnModel().getColumn(3).setPreferredWidth(50);
            jTablePesquisa.getColumnModel().getColumn(4).setPreferredWidth(100);
            jTablePesquisa.getColumnModel().getColumn(5).setPreferredWidth(100);
            jTablePesquisa.getColumnModel().getColumn(6).setPreferredWidth(100);
            jTablePesquisa.getColumnModel().getColumn(0).setResizable(false);
            jTablePesquisa.getColumnModel().getColumn(1).setResizable(false);
            jTablePesquisa.getColumnModel().getColumn(2).setResizable(false);
            jTablePesquisa.getColumnModel().getColumn(3).setResizable(false);
            jTablePesquisa.getColumnModel().getColumn(4).setResizable(false);
            jTablePesquisa.getColumnModel().getColumn(5).setResizable(false);
            jTablePesquisa.getColumnModel().getColumn(6).setResizable(false);
            jTablePesquisa.getTableHeader().setReorderingAllowed(false);
            //jTablePesquisa.setAutoResizeMode(jTablePesquisa.AUTO_RESIZE_OFF);
            jTablePesquisa.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
            try {
                connect.conexao();

                PreparedStatement ob = connect.conn.prepareStatement("Select T.nome, O.Cod_Ocorrencia,Causas, D.nome, R.nr_danos, Data,Hora\n"
                        + "From ocorrencia O, Resultado R, Tipocorrencia T, Danos D ,situacao S\n"
                        + "Where O.Cod_ocorrencia = R.Codigo_ocorrencia\n"
                        + "and o.cod_tipoOcorrencia = T.cod_tipo\n"
                        + "and D.cod_danos = R.codigo_danos\n"
                        + "and S.Cod_situacao = O.Cod_Situacao\n"
                        + "and S.nome like 'Esclarecida'");
                connect.rs = ob.executeQuery();
                DefaultTableModel model = (DefaultTableModel) jTablePesquisa.getModel();
                model.setNumRows(0);
                while (connect.rs.next()) {
                    model.addRow(new Object[]{
                        connect.rs.getString("O.Cod_Ocorrencia"),
                        connect.rs.getString("T.Nome"),
                        connect.rs.getString("O.Causas"),
                        connect.rs.getString("D.Nome"),
                        connect.rs.getString("R.nr_Danos"),
                        connect.rs.getString("Data"),
                        connect.rs.getString("Hora"),});
                }

                verifTab();
            } catch (SQLException erro) {
                JOptionPane.showMessageDialog(null, "Contacte o Administrador" + erro);
            }
        }
        if (jComboBox2.getSelectedIndex() == 0) {
            //remove linhas nas tabelas
            DefaultTableModel modelo, modeloVit;
            modelo = (DefaultTableModel) jTablePesquisa.getModel();
            modelo.setNumRows(0);
            modeloVit = (DefaultTableModel) jTableVitimas.getModel();
            modeloVit.setNumRows(0);
            jTextAreaDesc.setText("");

        }
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jComboBox2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox2ItemStateChanged
        // TODO add your handling code here:
        cleanTabela();
    }//GEN-LAST:event_jComboBox2ItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConOcorrencias.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConOcorrencias.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConOcorrencias.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConOcorrencias.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ConOcorrencias().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTableAutor;
    private javax.swing.JTable jTablePesquisa;
    private javax.swing.JTable jTableVitimas;
    private javax.swing.JTextArea jTextAreaDesc;
    private javax.swing.JTextField pescTF;
    // End of variables declaration//GEN-END:variables
public void Descricao() {
        try {
            String ocorrencia = "" + jTablePesquisa.getValueAt(jTablePesquisa.getSelectedRow(), 0);
            PreparedStatement ps = connect.conn.prepareStatement("Select O.Cod_Ocorrencia,Descricao\n"
                    + "From ocorrencia O, Resultado R, Tipocorrencia T, Danos D\n"
                    + "Where O.Cod_ocorrencia = R.Codigo_ocorrencia\n"
                    + "and o.cod_tipoOcorrencia = T.cod_tipo\n"
                    + "and D.cod_danos =R.codigo_danos\n"
                    + " and Cod_Ocorrencia='" + ocorrencia + "'");
            ResultSet resultado = ps.executeQuery();
            resultado.first();
            String descricao = resultado.getString("Descricao");
            jTextAreaDesc.setText(descricao);
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "Erro ao selecionar a descrição! Contacte o administrador do sistema" + erro.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }

    public void Autores() {
        try {
            String ocorrencia = "" + jTablePesquisa.getValueAt(jTablePesquisa.getSelectedRow(), 0);
            PreparedStatement ps = connect.conn.prepareStatement("Select Pessoa.Nome,Tipo_Doc,BI_Passaport,Apelido,Data_Nasc,Sexo,Nacionalidade,Provincia_Nasc,Distrito_Cidade_Nasc,\n"
                    + "Provincia_resid,profissao,Bairro_resid,Quarteirao_resid,Av_rua_resid,nr_resid from Pessoa, autoria, Ocorrencia\n"
                    + "where autoria.codigo_pessoa=pessoa.cod_pessoa\n"
                    + "and autoria.codigo_ocorrencia=ocorrencia.cod_Ocorrencia and Cod_Ocorrencia='" + ocorrencia + "'");

            ResultSet resultado = ps.executeQuery();
            resultado.next();

            //Setando novo modelo de clientes para a tbl d pesquisa:
            jTableAutor.setModel(new DefaultTableModel(
                    new Object[][]{},
                    new String[]{"Tipo do documento", "Nº do documento", "Nome", "Apelido", "Data de Nascimento", "Sexo", "Nacionalidade",
                        "Local de residência", "Bairro",
                        "Quarteirão", "Casa Nº", "Profissão"}
            )//Linhas ineditaveis:
            {
                @Override
                public boolean isCellEditable(int row, int col) {
                    return false;
                }
            }//fim
            );
            jTableAutor.getColumnModel().getColumn(0).setPreferredWidth(150);
            jTableAutor.getColumnModel().getColumn(1).setPreferredWidth(150);
            jTableAutor.getColumnModel().getColumn(2).setPreferredWidth(180);
            jTableAutor.getColumnModel().getColumn(3).setPreferredWidth(100);
            jTableAutor.getColumnModel().getColumn(4).setPreferredWidth(150);
            jTableAutor.getColumnModel().getColumn(5).setPreferredWidth(50);
            jTableAutor.getColumnModel().getColumn(6).setPreferredWidth(110);
            jTableAutor.getColumnModel().getColumn(7).setPreferredWidth(120);
            jTableAutor.getColumnModel().getColumn(8).setPreferredWidth(130);
            jTableAutor.getColumnModel().getColumn(9).setPreferredWidth(60);
            jTableAutor.getColumnModel().getColumn(10).setPreferredWidth(60);
            jTableAutor.getColumnModel().getColumn(11).setPreferredWidth(100);

            jTableAutor.getColumnModel().getColumn(0).setResizable(false);
            jTableAutor.getColumnModel().getColumn(1).setResizable(false);
            jTableAutor.getColumnModel().getColumn(2).setResizable(false);
            jTableAutor.getColumnModel().getColumn(3).setResizable(false);
            jTableAutor.getColumnModel().getColumn(4).setResizable(false);
            jTableAutor.getColumnModel().getColumn(5).setResizable(false);
            jTableAutor.getColumnModel().getColumn(6).setResizable(false);
            jTableAutor.getColumnModel().getColumn(7).setResizable(false);
            jTableAutor.getColumnModel().getColumn(8).setResizable(false);
            jTableAutor.getColumnModel().getColumn(9).setResizable(false);
            jTableAutor.getColumnModel().getColumn(10).setResizable(false);
            jTableAutor.getColumnModel().getColumn(11).setResizable(false);

            jTableAutor.getTableHeader().setReorderingAllowed(false);
            //jTablePesquisa.setAutoResizeMode(jTablePesquisa.AUTO_RESIZE_OFF);
            jTableAutor.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

            connect.rs = ps.executeQuery();
            DefaultTableModel modelo = (DefaultTableModel) jTableAutor.getModel();
            modelo.setNumRows(0);
            while (connect.rs.next()) {
                modelo.addRow(new Object[]{
                    connect.rs.getString("Tipo_Doc"),
                    connect.rs.getString("BI_Passaport"),
                    connect.rs.getString("Nome"),
                    connect.rs.getString("Apelido"),
                    connect.rs.getString("Data_Nasc"),
                    connect.rs.getString("Sexo"),
                    connect.rs.getString("Nacionalidade"),
                    //connect.rs.getString("Provincia_Nasc"),
                    //connect.rs.getString("Distrito_Cidade_Nasc"),
                    connect.rs.getString("Provincia_resid"),
                    connect.rs.getString("Bairro_resid"),
                    connect.rs.getString("Quarteirao_resid"),
                    //connect.rs.getString("Av_rua_resid"),
                    connect.rs.getString("nr_resid"),
                    connect.rs.getString("profissao"),});
            }

        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "Erro ao selecionar o autor(s)! Contacte o administrador do sistema" + erro.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }

    public void Vitimas() {
        try {
            String ocorrencia = "" + jTablePesquisa.getValueAt(jTablePesquisa.getSelectedRow(), 0);
            PreparedStatement ps = connect.conn.prepareStatement("Select Pessoa.Nome,Tipo_Doc,BI_Passaport,Apelido,Data_Nasc,Sexo,Nacionalidade,Provincia_Nasc,Distrito_Cidade_Nasc,\n"
                    + "Provincia_resid,profissao,Bairro_resid,Quarteirao_resid,Av_rua_resid,nr_resid from Pessoa, vitimizacao, Ocorrencia\n"
                    + "where vitimizacao.codigo_pessoa_vit=pessoa.cod_pessoa\n"
                    + "and vitimizacao.codigo_ocorrencia_vit=ocorrencia.cod_Ocorrencia and Cod_Ocorrencia='" + ocorrencia + "'");

            ResultSet resultado = ps.executeQuery();
            resultado.first();

            //Setando novo modelo de clientes para a tbl d pesquisa:
            jTableVitimas.setModel(new DefaultTableModel(
                    new Object[][]{},
                    new String[]{"Tipo do documento", "Nº do documento", "Nome", "Apelido", "Data de Nascimento", "Sexo", "Nacionalidade",
                        "Local de residência", "Bairro",
                        "Quarteirão", "Casa Nº", "Profissão"}
            )//Linhas ineditaveis:
            {
                @Override
                public boolean isCellEditable(int row, int col) {
                    return false;
                }
            }//fim
            );
            jTableVitimas.getColumnModel().getColumn(0).setPreferredWidth(150);
            jTableVitimas.getColumnModel().getColumn(1).setPreferredWidth(150);
            jTableVitimas.getColumnModel().getColumn(2).setPreferredWidth(180);
            jTableVitimas.getColumnModel().getColumn(3).setPreferredWidth(100);
            jTableVitimas.getColumnModel().getColumn(4).setPreferredWidth(150);
            jTableVitimas.getColumnModel().getColumn(5).setPreferredWidth(50);
            jTableVitimas.getColumnModel().getColumn(6).setPreferredWidth(110);
            jTableVitimas.getColumnModel().getColumn(7).setPreferredWidth(120);
            jTableVitimas.getColumnModel().getColumn(8).setPreferredWidth(130);
            jTableVitimas.getColumnModel().getColumn(9).setPreferredWidth(60);
            jTableVitimas.getColumnModel().getColumn(10).setPreferredWidth(60);
            jTableVitimas.getColumnModel().getColumn(11).setPreferredWidth(100);

            jTableVitimas.getColumnModel().getColumn(0).setResizable(false);
            jTableVitimas.getColumnModel().getColumn(1).setResizable(false);
            jTableVitimas.getColumnModel().getColumn(2).setResizable(false);
            jTableVitimas.getColumnModel().getColumn(3).setResizable(false);
            jTableVitimas.getColumnModel().getColumn(4).setResizable(false);
            jTableVitimas.getColumnModel().getColumn(5).setResizable(false);
            jTableVitimas.getColumnModel().getColumn(6).setResizable(false);
            jTableVitimas.getColumnModel().getColumn(7).setResizable(false);
            jTableVitimas.getColumnModel().getColumn(8).setResizable(false);
            jTableVitimas.getColumnModel().getColumn(9).setResizable(false);
            jTableVitimas.getColumnModel().getColumn(10).setResizable(false);
            jTableVitimas.getColumnModel().getColumn(11).setResizable(false);

            jTableVitimas.getTableHeader().setReorderingAllowed(false);
            //jTablePesquisa.setAutoResizeMode(jTablePesquisa.AUTO_RESIZE_OFF);
            jTableVitimas.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

            connect.rs = ps.executeQuery();
            DefaultTableModel modelo = (DefaultTableModel) jTableVitimas.getModel();
            modelo.setNumRows(0);
            while (connect.rs.next()) {
                modelo.addRow(new Object[]{
                    connect.rs.getString("Tipo_Doc"),
                    connect.rs.getString("BI_Passaport"),
                    connect.rs.getString("Nome"),
                    connect.rs.getString("Apelido"),
                    connect.rs.getString("Data_Nasc"),
                    connect.rs.getString("Sexo"),
                    connect.rs.getString("Nacionalidade"),
                    //connect.rs.getString("Provincia_Nasc"),
                    //connect.rs.getString("Distrito_Cidade_Nasc"),
                    connect.rs.getString("Provincia_resid"),
                    connect.rs.getString("Bairro_resid"),
                    connect.rs.getString("Quarteirao_resid"),
                    //connect.rs.getString("Av_rua_resid"),
                    connect.rs.getString("nr_resid"),
                    connect.rs.getString("profissao"),});
            }

        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "Erro ao selecionar a vitima(s)! Contacte o administrador do sistema" + erro.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void verifTab() {
        DefaultTableModel model = (DefaultTableModel) jTablePesquisa.getModel();
        if (model.getRowCount() == 0) {
            JOptionPane.showMessageDialog(null, "Nenhum Resultado encontrado", "Atenção", 1);
        }
    }

    private void cleanTabela() {

        jTableAutor.setModel(new DefaultTableModel(
                new Object[][]{},
                new String[]{"Tipo do documento", "Nº do documento", "Nome", "Apelido", "Data de Nascimento", "Sexo", "Nacionalidade",
                    "Local de residência", "Bairro",
                    "Quarteirão", "Casa Nº", "Profissão"}
        ));
        jTableVitimas.setModel(new DefaultTableModel(
                new Object[][]{},
                new String[]{"Tipo do documento", "Nº do documento", "Nome", "Apelido", "Data de Nascimento", "Sexo", "Nacionalidade",
                    "Local de residência", "Bairro",
                    "Quarteirão", "Casa Nº", "Profissão"}
        ));
        jTextAreaDesc.setText(null);
    }
}
